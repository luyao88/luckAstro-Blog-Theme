<div class="theme-toggle">
  <button
    id="color-mode-switch"
    class="vp-color-mode-switch"
    type="button"
    aria-label="切换主题模式"
  >
    <!-- 暗色模式图标（默认显示） -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="icon dark-icon"
      viewBox="0 0 1024 1024"
      fill="currentColor"
      aria-label="dark icon"
      name="dark"
    >
      <path
        d="M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"
      ></path>
    </svg>

    <!-- 亮色模式图标（默认隐藏） -->
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="icon light-icon"
      viewBox="0 0 1024 1024"
      fill="currentColor"
      aria-label="light icon"
      name="light"
    >
      <path
        d="M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"
      ></path>
    </svg>
  </button>
</div>

<style>
  .theme-toggle {
    position: relative;
    display: flex;
    align-items: center;
    margin-left: 1rem;
  }

  .vp-color-mode-switch {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    background: rgba(127, 127, 127, 0.15);
    border: none;
    cursor: pointer;
    color: var(--vh-font-color);
    transition:
      background-color 0.3s ease,
      transform 0.3s ease,
      color 0.3s ease;
  }

  .vp-color-mode-switch:hover {
    background: var(--vh-main-color);
    color: white;
    transform: rotate(15deg);
  }

  .vp-color-mode-switch .icon {
    position: absolute;
    width: 1.4rem;
    height: 1.4rem;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }

  /* 默认显示暗色图标 */
  .light-icon {
    display: none;
  }
  .dark-icon {
    display: block;
  }

  /* 当 html 有 light 类时，显示亮色图标 */
  html.light .light-icon {
    display: block;
  }
  html.light .dark-icon {
    display: none;
  }

  /* 当 html 有 dark 类时，显示暗色图标 */
  html.dark .dark-icon {
    display: block;
  }
  html.dark .light-icon {
    display: none;
  }

  /* 深色模式适配按钮背景 */
  html.dark .vp-color-mode-switch {
    background: rgba(255, 255, 255, 0.15);
  }

  html.dark .vp-color-mode-switch:hover {
    background: var(--vh-main-color);
  }
</style>
<script>
  ;(function () {
    const colorModeSwitch = document.getElementById('color-mode-switch')
    if (!colorModeSwitch) return

    // 设置主题
    const setTheme = (theme: 'light' | 'dark') => {
      const html = document.documentElement
      html.classList.remove('light', 'dark')
      html.classList.add(theme)
      localStorage.setItem('theme', theme)
      console.log(`Theme set to ${theme}`)
    }

    // 切换主题的辅助函数
    const changeTheme = () => {
      const html = document.documentElement
      const currentTheme = html.classList.contains('dark') ? 'dark' : 'light'
      const nextTheme = currentTheme === 'light' ? 'dark' : 'light'
      setTheme(nextTheme)
    }

    // 优化的主题切换函数
    const changeBtn = (func, $eve) => {
      const x = $eve.clientX
      const y = $eve.clientY
      // 计算鼠标点击位置距离视窗的最大圆半径
      const endRadius = Math.hypot(
        Math.max(x, innerWidth - x),
        Math.max(y, innerHeight - y)
      )
      document.documentElement.style.setProperty('--x', x + 'px')
      document.documentElement.style.setProperty('--y', y + 'px')
      document.documentElement.style.setProperty('--r', endRadius + 'px')
      // 判断浏览器是否支持document.startViewTransition
      if ((document as any).startViewTransition) {
        // 如果支持就使用document.startViewTransition方法
        ;(document as any).startViewTransition(() => {
          func.call() // 这里的函数是切换主题的函数，调用changeBtn函数时进行传入
        })
      } else {
        // 如果不支持，就使用最原始的方式，切换主题
        func.call()
      }
    }

    // 切换主题主函数
    const toggleTheme = (event: MouseEvent) => {
      changeBtn(changeTheme, event)
    }

    // 初始化
    const savedTheme = localStorage.getItem('theme')
    if (savedTheme === 'dark') {
      setTheme('dark')
    } else {
      setTheme('light')
    }

    // 添加事件
    colorModeSwitch.addEventListener('click', toggleTheme as EventListener)
  })()
</script>
